<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>UniGlobe Chatbot</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    .bubble-user {
      background: #2563eb;
      color: white;
      padding: 8px 12px;
      border-radius: 16px;
    }
    .bubble-bot {
      background: #f1f5f9;
      padding: 8px 12px;
      border-radius: 16px;
    }
  </style>
</head>
<body class="bg-gray-100 flex flex-col h-screen">
  <!-- Header -->
  <header class="bg-blue-600 text-white p-4 flex justify-between items-center">
    <h1 class="text-lg font-bold">UniGlobe Assistant</h1>
    <button onclick="logout()" class="text-sm bg-red-500 px-3 py-1 rounded">Logout</button>
  </header>

  <!-- Chat messages -->
  <main id="chat-messages" class="flex-1 overflow-y-auto p-4 space-y-3"></main>

  <!-- Input box -->
  <footer class="bg-white p-3 flex items-center gap-2">
    <input 
      id="chat-input" 
      type="text" 
      placeholder="Ask me anything..." 
      class="flex-1 border rounded-lg p-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
    >
    <button 
      id="send-btn" 
      class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700"
    >
      Send
    </button>
  </footer>

  <script>
    const messagesEl = document.getElementById('chat-messages');
    const inputEl = document.getElementById('chat-input');
    const sendBtn = document.getElementById('send-btn');

    function addUserMessage(text) {
      const wrap = document.createElement('div');
      wrap.className = 'flex justify-end';
      wrap.innerHTML = `<div class="bubble-user max-w-[75%]">${text}</div>`;
      messagesEl.appendChild(wrap);
      scrollToBottom();
    }

    function addBotMessage(text) {
      const wrap = document.createElement('div');
      wrap.className = 'flex justify-start';
      wrap.innerHTML = `<div class="bubble-bot max-w-[75%]">${text}</div>`;
      messagesEl.appendChild(wrap);
      scrollToBottom();
    }

    function scrollToBottom() {
      messagesEl.scrollTop = messagesEl.scrollHeight;
    }

    async function sendMessage() {
      const text = inputEl.value.trim();
      if (!text) return;
      addUserMessage(text);
      inputEl.value = "";

      // Bot typing indicator
      const typingEl = document.createElement('div');
      typingEl.className = 'flex justify-start';
      typingEl.innerHTML = `<div class="bubble-bot max-w-[75%]">...</div>`;
      messagesEl.appendChild(typingEl);
      scrollToBottom();

      try {
        const res = await fetch("/api/chat", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ message: text })
        });
        const data = await res.json();
        typingEl.remove();
        addBotMessage(data.reply || "⚠️ No reply from server.");
      } catch (err) {
        typingEl.remove();
        addBotMessage("⚠️ Error connecting to server.");
        console.error(err);
      }
    }

    inputEl.addEventListener('keydown', e => { if (e.key === 'Enter') sendMessage(); });
    sendBtn.addEventListener('click', sendMessage);

    document.addEventListener("DOMContentLoaded", () => {
      if (!localStorage.getItem("loggedIn")) {
        window.location.href = "index.html";
      }
    });

    function logout() {
      localStorage.removeItem("loggedIn");
      window.location.href = "index.html";
    }
  </script>
</body>
</html>
